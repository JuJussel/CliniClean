; Access to all API routes is checked on 2 levels
; First a session must be present and identified by the request cookie
; Second, the user needs to have explicit access to the requested route
; Each section relates to the filename in the Http/Controllers directory
; The keys indicate what view access is needed and the number the maximum permission allowed
; User access cannot be higher than specified
; "all" refers to all users and user does not need explicit view access
; Encoding for route access
; Checks the request mode (get, post,...)
; 1 gives read only get
; 2 gives full read/write access - can be changed in the future
[access_level]
GET = 1
POST = 2
PUT = 2
DELETE = 2

; Routes and their permissions
[Disease]
patient.medical = 2
medical.karte = 2

[Doctors]
all = 1

[Encounters]
all = 1
reception = 2

[Examinationresults]
patient.medical = 1
medical.karte = 1
medical.healthcheck = 1

[Examinations]
patient.medical = 2
medical.karte = 2
medical.healthcheck = 2

[Favourites]
all = 2

[Files]
all = 2

[Healthcheckexams]
medical.healthcheck = 1

[Insuranceproviders]
all = 1

[Insurances]
patient = 2

[Medicalinfos]
patient.medical = 2
medical.karte = 2

[Medicationtimings]
all = 1

[Occupations]
all = 1

[Orders]
order = 2
medical.karte = 2
medical.healthcheck = 2

[Patientnotes]
patient.medical = 2
medical.karte = 2

[Patients]
reception = 1
patient = 2
patient.medical = 2
medical.karte = 2
medical.healthcheck = 1
order = 1

[Payments]
reception = 2

[Procedurechecks]
all = 2

[Procedures]
all = 1

[Records]
patient.medical = 1
medical.karte = 2
medical.healthcheck = 2

[Reservations]
reception = 2

[Schemas]
all = 1

[Sessions]
all = 2

[Setfolders]
medical.karte = 2
settings.sets = 2

[Sets]
medical.karte = 2
settings.sets = 2

[Settings]
all = 0

[Shinsatutypes]
reception = 1
patient.medical = 1
medical.karte =1

[Suppliers]
order = 1
medical.healthcheck = 1

[Usergroups]
all = 0

[Users]
all = 2

[Vitalcategories]
medical.karte = 1

[Vitals]
medical.karte = 2

[Zips]
all = 1